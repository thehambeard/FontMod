<Project Sdk="Microsoft.NET.Sdk" InitialTargets="GenerateCustomPropsFile">
  <Import Project="$(SolutionDir)GamePath-KM.props" Condition="Exists('$(SolutionDir)GamePath-KM.props')" />

  <PropertyGroup>
    <TargetFramework>net481</TargetFramework>
    <AssemblyName>FontMod</AssemblyName>
    <Description>FontMod</Description>
    <Version>1.1.2</Version>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RootNamespace>FontMod</RootNamespace>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <RestoreAdditionalProjectSources>https://api.nuget.org/v3/index.json</RestoreAdditionalProjectSources>
    <KingmakerData>$(LocalAppData)Low\Owlcat Games\Pathfinder Kingmaker</KingmakerData>
    <DefineConstants>KM</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Unity*.dll" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Assembly-CSharp*.dll" Publicize="true" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Newtonsoft.Json.dll*" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\UniRx.dll*" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\UnityModManager\UnityModManager.dll*" Publicize="true" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\UnityModManager\0Harmony.dll*" Private="false" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Info.json" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    <None Update="Fonts\Ldfcomicsans-jj7l.ttf" CopyToOutputDirectory="PreserveNewest" />
    <None Update="Fonts\No Name Sans.ttf" CopyToOutputDirectory="PreserveNewest" />
    <None Update="TMPro_Plugin.dll" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  
  <Target Name="Deploy" AfterTargets="Build">
    <ItemGroup>
      <Files Include="$(TargetDir)\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(Files)" DestinationFiles="@(Files->'$(KingmakerInstallDir)\Mods\$(AssemblyName)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <ZipDirectory SourceDirectory="$(MSBuildProjectDirectory)\$(OutputPath)" DestinationFile="$(MSBuildProjectDirectory)\$(OutputPath)\..\$(AssemblyName)-$(Version)-KM.zip" Overwrite="true" />
  </Target>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" IncludeAssets="build; contentfiles" Version="0.4.2" PrivateAssets="all" />
    <PackageReference Include="MicroUtils.HarmonyAnalyzers" IncludeAssets="runtime; build; native; contentfiles; analyzers" Version="*-*" PrivateAssets="all" />
  </ItemGroup>
  
  <Target Name="GenerateCustomPropsFile" Condition="$(KingmakerInstallDir) == ''">
    <Exec Command="findstr /C:&quot;[Manager] Mods path: &quot; &quot;$(KingmakerData)\output_log.txt&quot;" IgnoreExitCode="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="MonoPathLine" />
    </Exec>

    <PropertyGroup>
      <MonoPathRegex>^\[Manager\] Mods path: (.*?)\\Mods.$</MonoPathRegex>
    </PropertyGroup>

    <PropertyGroup>
      <KingmakerInstallDir>$([System.Text.RegularExpressions.Regex]::Match($(MonoPathLine), $(MonoPathRegex)).Groups[1].Value)</KingmakerInstallDir>
    </PropertyGroup>

    <WriteLinesToFile File="$(SolutionDir)GamePath-KM.props" Lines="&lt;Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003'&gt;&#xD;&#xA;	&lt;PropertyGroup&gt;&#xD;&#xA;		&lt;KingmakerInstallDir&gt;$(KingmakerInstallDir)&lt;/KingmakerInstallDir&gt;&#xD;&#xA;	&lt;/PropertyGroup&gt;&#xD;&#xA;&lt;/Project&gt;" Overwrite="true" Encoding="utf-8" />
  </Target>
  
  <Target Name="DeleteCustomPropsFile" BeforeTargets="Clean">
    <Delete Files="$(SolutionDir)GamePath-KM.props" />
  </Target>
</Project>
