<Project Sdk="Microsoft.NET.Sdk" InitialTargets="GenerateCustomPropsFile">
  <Import Project="$(SolutionDir)GamePaths.props" Condition="Exists('$(SolutionDir)GamePaths.props')" />

  <PropertyGroup>
    <TargetFramework>net481</TargetFramework>
    <AssemblyName>FontMod</AssemblyName>
    <Description>FontMod</Description>
    <Version>1.1.1</Version>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RootNamespace>FontMod</RootNamespace>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <RestoreAdditionalProjectSources>https://api.nuget.org/v3/index.json</RestoreAdditionalProjectSources>
    <WrathData>$(LocalAppData)Low\Owlcat Games\Pathfinder Wrath Of The Righteous</WrathData>
    <RogueTraderData>$(LocalAppData)Low\Owlcat Games\Warhammer 40000 Rogue Trader</RogueTraderData>
    <KingmakerData>$(LocalAppData)Low\Owlcat Games\Pathfinder Kingmaker</KingmakerData>
    <Configurations>RT_Debug;RT_Release;WOTR_Debug;WOTR_Release;KM_Debug;KM_Release</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RT_Debug|AnyCPU'">
    <OutputPath>bin\RT_Debug\</OutputPath>
    <DefineConstants>RT;DEBUG;TRACE</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RT_Release|AnyCPU'">
    <OutputPath>bin\RT_Release\</OutputPath>
    <DefineConstants>RT;TRACE</DefineConstants>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WOTR_Debug|AnyCPU'">
    <OutputPath>bin\WOTR_Debug\</OutputPath>
    <DefineConstants>WOTR;DEBUG;TRACE</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WOTR_Release|AnyCPU'">
    <OutputPath>bin\WOTR_Release\</OutputPath>
    <DefineConstants>WOTR;TRACE</DefineConstants>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='KM_Debug|AnyCPU'">
    <OutputPath>bin\KM_Debug\</OutputPath>
    <DefineConstants>KM;DEBUG;TRACE</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='KM_Release|AnyCPU'">
    <OutputPath>bin\KM_Release\</OutputPath>
    <DefineConstants>KM;TRACE</DefineConstants>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup Condition="'$(Configuration)'=='WOTR_Release' or '$(Configuration)'=='WOTR_Debug'">
    <Reference Include="$(WrathInstallDir)\Wrath_Data\Managed\Unity*.dll" Publicize="true" Private="false" />
    <Reference Include="$(WrathInstallDir)\Wrath_Data\Managed\Assembly-CSharp.dll*" Publicize="true" Private="false" />
    <Reference Include="$(WrathInstallDir)\Wrath_Data\Managed\UnityModManager\UnityModManager.dll*" Publicize="true" Private="false" />
    <Reference Include="$(WrathInstallDir)\Wrath_Data\Managed\Newtonsoft.Json.dll*" Private="false" />
    <Reference Include="$(WrathInstallDir)\Wrath_Data\Managed\UnityModManager\0Harmony.dll*" Private="false" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)'=='RT_Release' or '$(Configuration)'=='RT_Debug'">
    <Reference Include="$(RogueTraderInstallDir)\WH40KRT_Data\Managed\Unity*.dll" Publicize="true" Private="false" />
    <Reference Include="$(RogueTraderInstallDir)\WH40KRT_Data\Managed\Code.dll*" Publicize="true" Private="false" />
    <Reference Include="$(RogueTraderData)\UnityModManager\UnityModManager.dll*" Publicize="true" Private="false" />
    <Reference Include="$(RogueTraderInstallDir)\WH40KRT_Data\Managed\0Harmony.dll*" Private="false" />
    <Reference Include="$(RogueTraderInstallDir)\WH40KRT_Data\Managed\Newtonsoft.Json.dll*" Private="false" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)'=='KM_Release' or '$(Configuration)'=='KM_Debug'">
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Unity*.dll" Publicize="true" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Assembly-CSharp*.dll" Publicize="true" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\UnityModManager\UnityModManager.dll*" Publicize="true" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\UnityModManager\0Harmony.dll*" Private="false" />
    <Reference Include="$(KingmakerInstallDir)\Kingmaker_Data\Managed\Newtonsoft.Json.dll*" Private="false" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" IncludeAssets="build; contentfiles" Version="0.4.2" PrivateAssets="all" />
    <PackageReference Include="MicroUtils.HarmonyAnalyzers" IncludeAssets="runtime; build; native; contentfiles; analyzers" Version="*-*" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Info.json" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)" />
    <None Update="Fonts\Ldfcomicsans-jj7l.ttf" CopyToOutputDirectory="PreserveNewest" />
    <None Update="Fonts\No Name Sans.ttf" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <Target Name="Deploy" AfterTargets="Build">
    <ItemGroup>
      <Files Include="$(TargetDir)\**\*.*" />
    </ItemGroup>
    <Copy Condition="'$(DefineConstants)' == 'WOTR' And '$(WrathInstallDir)' != ''" SourceFiles="@(Files)" DestinationFiles="@(Files->'$(WrathInstallDir)\Mods\$(AssemblyName)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy Condition="'$(DefineConstants)' == 'RT' And '$(RogueTraderInstallDir)' != ''" SourceFiles="@(Files)" DestinationFiles="@(Files->'$(RogueTraderInstallDir)\Mods\$(AssemblyName)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <ZipDirectory SourceDirectory="$(MSBuildProjectDirectory)\$(OutputPath)" DestinationFile="$(MSBuildProjectDirectory)\$(OutputPath)\..\$(AssemblyName)-$(Version)-$(Configuration).zip" Overwrite="true" />
  </Target>

  <PropertyGroup Condition="Exists('$(WrathData)')">
    <WrathLogFile>$(WrathData)\Player.log</WrathLogFile>
    <WrathMonoPathRegex>^Mono path\[0\] = '(.*?)/Wrath_Data/Managed'$</WrathMonoPathRegex>
    <RTLogFile>$(RogueTraderData)\Player.log</RTLogFile>
    <RTMonoPathRegex>^Mono path\[0\] = '(.*?)/WH40KRT_Data/Managed'$</RTMonoPathRegex>
    <KMLogFile>$(KingmakerData)\output_log.txt</KMLogFile>
    <KMMonoPathRegex>^\[Manager\] Mods path: (.*?)\\Mods.$</KMMonoPathRegex>
  </PropertyGroup>
  
  <Target Name="GenerateCustomPropsFile"
          BeforeTargets="BeforeBuild"
          Condition="(Exists('$(RTLogFile)') And '$(RogueTraderInstallDir)' == '') Or (Exists('$(WrathLogFile)') And '$(WrathInstallDir)' == '') Or (Exists('$(KMLogFile)') And '$(KingmakerInstallDir)' == '')">

    <!-- RT configuration -->
    <Exec Condition="Exists('$(RTLogFile)') And '$(RogueTraderInstallDir)' == ''" Command="findstr /C:&quot;Mono path[0]&quot; &quot;$(RTLogFile)&quot;" IgnoreExitCode="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="MonoPathLine" />
    </Exec>

    <PropertyGroup Condition="Exists('$(RTLogFile)') And '$(RogueTraderInstallDir)' == ''">
      <RogueTraderInstallDir>$([System.Text.RegularExpressions.Regex]::Match($(MonoPathLine), $(RTMonoPathRegex)).Groups[1].Value)</RogueTraderInstallDir>
    </PropertyGroup>

    <!-- WOTR configuration -->
    <Exec Condition="Exists('$(WrathLogFile)') And '$(WrathInstallDir)' == ''" Command="findstr /C:&quot;Mono path[0]&quot; &quot;$(WrathLogFile)&quot;" IgnoreExitCode="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="MonoPathLine" />
    </Exec>

    <PropertyGroup Condition="Exists('$(WrathLogFile)') And '$(WrathInstallDir)' == ''">
      <WrathInstallDir>$([System.Text.RegularExpressions.Regex]::Match($(MonoPathLine), $(WrathMonoPathRegex)).Groups[1].Value)</WrathInstallDir>
    </PropertyGroup>

    <!-- KM configuration -->
    <Exec Condition="Exists('$(KMLogFile)') And '$(KingmakerInstallDir)' == ''" Command="findstr /C:&quot;[Manager] Mods path: &quot; &quot;$(KMLogFile)&quot;" IgnoreExitCode="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="MonoPathLine" />
    </Exec>

    <PropertyGroup Condition="Exists('$(KMLogFile)') And '$(KingmakerInstallDir)' == ''">
      <KingmakerInstallDir>$([System.Text.RegularExpressions.Regex]::Match($(MonoPathLine), $(KMMonoPathRegex)).Groups[1].Value)</KingmakerInstallDir>
    </PropertyGroup>
    
    <!-- Write the .props file -->
    <WriteLinesToFile File="$(SolutionDir)GamePaths.props" Lines="&#xD;&#xA;&lt;Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003'&gt;&#xD;&#xA;  &lt;PropertyGroup&gt;&#xD;&#xA;      &lt;RogueTraderInstallDir&gt;$(RogueTraderInstallDir)&lt;/RogueTraderInstallDir&gt;&#xD;&#xA;      &lt;WrathInstallDir&gt;$(WrathInstallDir)&lt;/WrathInstallDir&gt;&#xD;&#xA;      &lt;KingmakerInstallDir&gt;$(KingmakerInstallDir)&lt;/KingmakerInstallDir&gt;&#xD;&#xA;  &lt;/PropertyGroup&gt;&#xD;&#xA;&lt;/Project&gt;" Overwrite="true" Encoding="utf-8" />
  </Target>

  <Target Name="DeleteCustomPropsFile" BeforeTargets="Clean">
    <Delete Files="$(SolutionDir)GamePaths.props" />
  </Target>

</Project>
